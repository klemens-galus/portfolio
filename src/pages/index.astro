---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Header from '../components/Header.astro';

---

<Layout title="Klemens Galus | Portfolio">
	<main>
		<Header />
		<div class="title">
			<div class="console-container">
				<span id="content"></span>
				<div class="cursor" id="console">&#95;</div>
			</div>
		</div>
		<p class="instructions">
			To get started, open the directory <code>src/pages</code> in your project.<br />
			<strong>Code Challenge:</strong> Tweak the "Welcome to Astro" message above.
		</p>
		<ul role="list" class="link-card-grid">
			<Card
				href="https://docs.astro.build/"
				title="Documentation"
				body="Learn how Astro works and explore the official API docs."
			/>
			<Card
				href="https://astro.build/integrations/"
				title="Integrations"
				body="Supercharge your project with new frameworks and libraries."
			/>
			<Card
				href="https://astro.build/themes/"
				title="Themes"
				body="Explore a galaxy of community-built starter themes."
			/>
			<Card
				href="https://astro.build/chat/"
				title="Community"
				body="Come say hi to our amazing Discord community. ❤️"
			/>
		</ul>
	</main>
</Layout>



<script>

// function([string1, string2],target id,[color1,color2])    
consoleText(['Devops', 'Architecture Cloud', 'Azure', 'Terraform', 'Ansible'], 'content',['tomato','rebeccapurple','lightblue', 'lightgreen', 'lightcoral']);

function consoleText(words:any, id:any, colors:any) {
  if (colors === undefined) colors = ['#fff'];
  var visible = true;
  var con = document.getElementById('console');
  console.log(con)
  var letterCount = 1;
  var x = 1;
  var waiting = false;
  var target = document.getElementById(id)
  target!.setAttribute('style', 'color:' + colors[0])
  window.setInterval(function() {
    if (letterCount === 0 && waiting === false) {
      waiting = true;
      target!.innerHTML = words[0].substring(0, letterCount)
      window.setTimeout(function() {
        var usedColor = colors.shift();
        colors.push(usedColor);
        var usedWord = words.shift();
        words.push(usedWord);
        x = 1;
        target!.setAttribute('style', 'color:' + colors[0])
        letterCount += x;
        waiting = false;
      }, 1000)
    } else if (letterCount === words[0].length + 1 && waiting === false) {
      waiting = true;
      window.setTimeout(function() {
        x = -1;
        letterCount += x;
        waiting = false;
      }, 1000)
    } else if (waiting === false) {
      target!.innerHTML = words[0].substring(0, letterCount)
      letterCount += x;
    }
  }, 100)
  window.setInterval(function() {
    if (visible === true) {
      con!.className = 'cursor hidden'
      visible = false;

    } else {
      con!.className = 'cursor'

      visible = true;
    }
  }, 500)
}
</script>
<style>

	@import url(https://fonts.googleapis.com/css?family=Khula:700);
	.console-container {
	
	font-family:Khula;
	font-size:4em;
	text-align:center;
	height:200px;
	width:900px;
	display:block;
	position:absolute;
	color: #141c3a;
	top:0;
	bottom:0;
	left:0;
	right:0;
	margin:auto;
	}
	.cursor {
	display:inline-block;
	position:relative;
	top:-0.14em;
	left: 1px;
	}
	.hidden {
		opacity: 0;
	}
	.title {
		position: relative;
		order: 2;
		margin-bottom: 2rem;
		color: #141c3a;
	}
	main {
		margin: auto;
		padding: 1rem;
		padding-top: 0rem;
		color: white;
		font-size: 20px;
		line-height: 1.6;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
		order: 3;
	}
</style>
